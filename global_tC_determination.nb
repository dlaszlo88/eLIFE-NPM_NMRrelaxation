(* Coded by D.Ban between 2013-2014
(c) 2016 St.Jude Children's Research Hospital
Dept.of Structural Biology
*)
ClearAll["Global`*"]

rHN = 1.04 10^-10;
theta = 17*(Pi/180);
delN = -162*10^-6;
u0 = 12.56637061 10^-7;
h = 6.62606896 10^-34;
gH = 2.67513 10^8;
gN = -2.7116*1 10^7;

Jw[tC_, w_, S2_, tF_] := (
  tau = (tC tF)/(tC + tF); (0.4 * S2 * 
      tC)/(1 + (w * tC)^2) + ((0.4*(1 - S2)*tau)/(1 + (tau w)^2))
  )

nXYcalc[tC_, S2_, tF_, JwFUNC_, Bf_] := (
  rHN = 1.04 10^-10;
  theta = 17*(Pi/180);
  delN = -162*10^-6;
  u0 = 12.56637061 10^-7;
  h = 6.62606896 10^-34;
  gH = 2.67513 10^8;
  gN = -2.7116*1 10^7;
  wH = 2 Pi*Bf*1 10^6;
  wN = (gN/gH)*wH;
  Bo = wH/gH;
  p = -(u0 gH gN h)/(8 Pi^2 rHN^3);
  d = (gN Bo delN)/(Sqrt[3]);
  AA = 0.5 (3 Cos[theta]^2 - 1);
  BB = p d;
  ((Sqrt[3]/
      6) AA BB ((4 JwFUNC[tC, 0, S2, tF]) + (3 JwFUNC[tC, wN, S2, 
         tF])))
  )

R1calc[tC_, S2_, tF_, JwFUNC_, Bf_] := (
  rHN = 1.04 10^-10;
  theta = 17*(Pi/180);
  delN = -162*10^-6;
  u0 = 12.56637061 10^-7;
  h = 6.62606896 10^-34;
  gH = 2.67513 10^8;
  gN = -2.7116*1 10^7;
  wH = 2 Pi*Bf*1 10^6;
  wN = (gN/gH)*wH;
  Bo = wH/gH;
  hbar = (6.62606896 10^-34)/(2 Pi);
  dHN = (u0 hbar gH gN)^2/(16 Pi^2 rHN^6);
  cHN = ((delN gN Bo)^2)/3.0;
  R1Nd = (dHN/
      4.0)*(JwFUNC[tC, wH - wN, S2, 
       tF] + (3.0*JwFUNC[tC, wN, S2, tF]) + (6.0*
        JwFUNC[tC, wH + wN, S2, tF]));
  R1Nc = cHN*JwFUNC[tC, wN, S2, tF];
  (R1Nd + R1Nc)
  )



SetDirectory[""]
dat = Import[""];
RES = {19, 23, 33, 35, 43, 59, 69, 83, 94, 98, 108, 119, 121};



xx = 1;
MINdata = {};
While[xx < Length[RES] + 1,
 For[yy = 1, yy < Length[dat[[All, 1]]] + 1, yy++ 1,
   (*Print[dat[[yy,1]]];*)
   
   If[RES[[xx]] == dat[[yy, 1]], Print[dat[[yy]]]; 
    MINdata = Append[MINdata, dat[[yy]]], Continue[]
    ]
   ]
  xx++
 ]

numFIELDS = 3; (*nXY data NOT R1*)
numRES = Length[RES]
minFUNC1 = {};

varList = Table["S" <> ToString[RES[[i]]], {i, 1, numRES}];
varList2 = Table["S" <> ToString[RES[[i]]], {i, 1, numRES}];
For[xx = 1, xx < numRES + 1, xx++,
 varList = Append[varList, "tF" <> ToString[RES[[xx]]]]
 ]
allVar = Insert[varList, "tauC", 1]
allVar2 = Insert[varList2, "tauC", 1]

xx = 1;
mALL = {};
mALLnoTF = {};
mALLerr = {};
mALLerrnoTF = {};
While[xx < numRES + 1,
 For[yy = 0, yy < numFIELDS, yy++ 1,
   Btemp = MINdata[[xx, 2 + (4*yy)]];
   nXYobs = MINdata[[xx, 3 + (4*yy)]];
   md = ((nXYobs - 
         nXYcalc[ToExpression[allVar[[1]]], 
          ToExpression[allVar[[1 + xx]]], 
          ToExpression[allVar[[1 + Length[RES] + xx]]], Jw, 
          Btemp])^2)/(nXYobs)^2;
   mdERR = ((nXYobs - 
         nXYcalc[ToExpression[allVar[[1]]], 
          ToExpression[allVar[[1 + xx]]], 
          ToExpression[allVar[[1 + Length[RES] + xx]]], Jw, 
          Btemp])^2)/(MINdata[[xx, 4 + (4*yy)]])^2;
   mdERRnoTF = ((nXYobs - 
         nXYcalc[ToExpression[allVar[[1]]], 
          ToExpression[allVar[[1 + xx]]], 0.0, Jw, 
          Btemp])^2)/(MINdata[[xx, 4 + (4*yy)]])^2;
   mdnoTF = ((nXYobs - 
         nXYcalc[ToExpression[allVar[[1]]], 
          ToExpression[allVar[[1 + xx]]], 0.0, Jw, 
          Btemp])^2)/(nXYobs)^2;
   mALL = Append[mALL, md];
   mALLnoTF = Append[mALLnoTF, mdnoTF];
   mALLerr = Append[mALLerr, mdERR];
   mALLerrnoTF = Append[mALLerrnoTF, mdERRnoTF];
   ]
  xx++
 ]
xx = 1;
While[xx < numRES + 1,
 R1obs = MINdata[[xx, 15]];
 B0R1 = MINdata[[xx, 14]];
 md2 = ((R1obs - 
       R1calc[ToExpression[allVar[[1]]], 
        ToExpression[allVar[[1 + xx]]], 
        ToExpression[allVar[[1 + Length[RES] + xx]]], Jw, 
        B0R1])^2/(R1obs^2));
 md2ERR = ((R1obs - 
       R1calc[ToExpression[allVar[[1]]], 
        ToExpression[allVar[[1 + xx]]], 
        ToExpression[allVar[[1 + Length[RES] + xx]]], Jw, 
        B0R1])^2/(MINdata[[xx, 16]]^2));
 md2ERRnoTF = ((R1obs - 
       R1calc[ToExpression[allVar[[1]]], 
        ToExpression[allVar[[1 + xx]]], 0.0, Jw, B0R1])^2/(MINdata[[
       xx, 16]]^2));
 md2noTF = ((R1obs - 
       R1calc[ToExpression[allVar[[1]]], 
        ToExpression[allVar[[1 + xx]]], 0.0, Jw, B0R1])^2/(R1obs^2));
 mALL = Append[mALL, md2];
 mALLnoTF = Append[mALLnoTF, md2noTF];
 mALLerr = Append[mALLerr, md2ERR];
 mALLerrnoTF = Append[mALLerrnoTF, md2ERRnoTF];
 xx++
 ]

maxTF = 250 10^-12;
mFUNC = Sum[mALL[[i]], {i, 1, Length[mALL]}];
mFUNCnoTF = Sum[mALLnoTF[[i]], {i, 1, Length[mALLnoTF]}];
nd = NMinimize[{mFUNC, tauC > 30 10^-9,
   0 < S19 < 1, tF19 < maxTF, tF19 > 0,
   0 < S23 < 1, tF23 > 0, tF23 < maxTF,
   0 < S33 < 1, tF33 > 0, tF33 < maxTF,
   0 < S35 < 1, tF35 > 0, tF35 < maxTF,
   0 < S43 < 1, tF43 > 0, tF43 < maxTF,
   0 < S59 < 1, tF59 > 0, tF59 < maxTF,
   0 < S69 < 1, tF69 > 0, tF69 < maxTF,
   0 < S83 < 1, tF83 > 0, tF83 < maxTF,
   0 < S94 < 1, tF94 > 0, tF94 < maxTF,
   0 < S98 < 1, tF98 > 0, tF98 < maxTF,
   0 < S108 < 1, tF108 > 0, tF108 < maxTF,
   0 < S119 < 1, tF119 > 0, tF119 < maxTF,
   0 < S121 < 1, tF121 > 0, tF121 < maxTF}, ToExpression[allVar], 
  MaxIterations -> 1000000]
nd2 = NMinimize[{mFUNCnoTF, tauC > 0,
   0 < S19 < 1,
   0 < S23 < 1,
   0 < S33 < 1,
   0 < S35 < 1,
   0 < S43 < 1,
   0 < S59 < 1,
   0 < S69 < 1,
   0 < S83 < 1,
   0 < S94 < 1,
   0 < S98 < 1,
   0 < S108 < 1,
   0 < S119 < 1,
   0 < S121 < 1}, ToExpression[allVar2], MaxIterations -> 500000]



maxTF = 250 10^-12;
mFUNCerr = Sum[mALLerr[[i]], {i, 1, Length[mALLerr]}];
mFUNCnoTFerr = Sum[mALLerrnoTF[[i]], {i, 1, Length[mALLerrnoTF]}];
nd = NMinimize[{mFUNCerr, tauC > 30 10^-9,
   0 < S19 < 1, tF19 < maxTF, tF19 > 0,
   0 < S23 < 1, tF23 > 0, tF23 < maxTF,
   0 < S33 < 1, tF33 > 0, tF33 < maxTF,
   0 < S35 < 1, tF35 > 0, tF35 < maxTF,
   0 < S43 < 1, tF43 > 0, tF43 < maxTF,
   0 < S59 < 1, tF59 > 0, tF59 < maxTF,
   0 < S69 < 1, tF69 > 0, tF69 < maxTF,
   0 < S83 < 1, tF83 > 0, tF83 < maxTF,
   0 < S94 < 1, tF94 > 0, tF94 < maxTF,
   0 < S98 < 1, tF98 > 0, tF98 < maxTF,
   0 < S108 < 1, tF108 > 0, tF108 < maxTF,
   0 < S119 < 1, tF119 > 0, tF119 < maxTF,
   0 < S121 < 1, tF121 > 0, tF121 < maxTF}, ToExpression[allVar], 
  MaxIterations -> 1000000]
nd2 = NMinimize[{mFUNCnoTFerr, tauC > 0,
   0 < S19 < 1,
   0 < S23 < 1,
   0 < S33 < 1,
   0 < S35 < 1,
   0 < S43 < 1,
   0 < S59 < 1,
   0 < S69 < 1,
   0 < S83 < 1,
   0 < S94 < 1,
   0 < S98 < 1,
   0 < S108 < 1,
   0 < S119 < 1,
   0 < S121 < 1}, ToExpression[allVar2], MaxIterations -> 500000]



Needs["ErrorBarPlots`"]
xx = 1;
mBACK = {};
While[xx < numRES + 1,
 For[yy = 0, yy < numFIELDS, yy++ 1,
   Btemp = MINdata[[xx, 2 + (4*yy)]];
   nXYobs = MINdata[[xx, 3 + (4*yy)]];
   backCALC = 
    nXYcalc[nd[[2, 1, 2]], nd[[2, 1 + xx, 2]], 
     nd[[2, 1 + Length[RES] + xx, 2]], Jw, Btemp];
   mBACK = 
    Append[
     mBACK, {{backCALC, nXYobs}, ErrorBar[MINdata[[xx, 4 + (4*yy)]]]}];
   ]
  xx++
 ]
mBACKR1 = {};
xx = 1;
While[xx < numRES + 1,
 R1obs = MINdata[[xx, 15]];
 B0R1 = MINdata[[xx, 14]];
 backR1 = 
  R1calc[nd[[2, 1, 2]], nd[[2, 1 + xx, 2]], 
   nd[[2, 1 + Length[RES] + xx, 2]], Jw, B0R1];
 mBACKR1 = 
  Append[mBACKR1, {{backR1, R1obs}, ErrorBar[MINdata[[xx, 16]]]}];
 xx++
 ]

line = Table[{i, i}, {i, 1, 100, 1}];
Show[{ErrorListPlot[mBACK, PlotMarkers -> {Automatic, Medium}, 
   PlotRange -> {{0, 110}, {0, 110}}, Frame -> True],
  Plot[x, {x, 0, 100}]}]
Show[{ErrorListPlot[mBACKR1, PlotMarkers -> {Automatic, Medium}, 
   PlotRange -> {{0, 0.5}, {0, 0.5}}, Frame -> True],
  Plot[x, {x, 0, 2}]}]
